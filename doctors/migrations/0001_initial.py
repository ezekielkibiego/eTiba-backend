# Generated by Django 5.2.1 on 2025-06-14 08:59

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'specializations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('consultation_fee', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('bio', models.TextField(blank=True, help_text="Doctor's biography and qualifications", null=True)),
                ('office_address', models.TextField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True, help_text='Whether doctor is accepting new appointments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'doctors',
            },
        ),
        migrations.CreateModel(
            name='DoctorSpecialization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('board_certified', models.BooleanField(default=False)),
                ('certification_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctors.doctor')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctors.specialization')),
            ],
            options={
                'db_table': 'doctor_specializations',
                'unique_together': {('doctor', 'specialization')},
            },
        ),
        migrations.AddField(
            model_name='doctor',
            name='specializations',
            field=models.ManyToManyField(through='doctors.DoctorSpecialization', to='doctors.specialization'),
        ),
        migrations.CreateModel(
            name='DoctorAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('break_start', models.TimeField(blank=True, help_text='Lunch break start time', null=True)),
                ('break_end', models.TimeField(blank=True, help_text='Lunch break end time', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_schedule', to='doctors.doctor')),
            ],
            options={
                'db_table': 'doctor_availability',
                'indexes': [models.Index(fields=['doctor', 'day_of_week'], name='doctor_avai_doctor__b54d61_idx'), models.Index(fields=['is_active'], name='doctor_avai_is_acti_639a6c_idx')],
                'unique_together': {('doctor', 'day_of_week')},
            },
        ),
        migrations.CreateModel(
            name='DoctorUnavailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unavailable_dates', to='doctors.doctor')),
            ],
            options={
                'db_table': 'doctor_unavailability',
                'indexes': [models.Index(fields=['doctor', 'start_date', 'end_date'], name='doctor_unav_doctor__5b3ae7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['user'], name='doctors_user_id_cf75de_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['license_number'], name='doctors_license_1ed880_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['is_available'], name='doctors_is_avai_62f7a8_idx'),
        ),
    ]
